I"&<p>하나의 리스트가 주어진다. 이 리스트 안의 임의의 값 3개를 골라 더해서 0이 되는 <b>리스트들</b>을 찾아라.</p>

<h2 id="조건">조건</h2>

<ul>
  <li>리스트와 리스트의 값은 중복될 수 없다.</li>
</ul>

<h2 id="풀이">풀이</h2>

<ul>
  <li>배열의 사이즈가 2개 이하이면 빈 리스트를 반환한다.</li>
  <li>받은 배열을 정렬한다.</li>
  <li>배열의 사이즈 -2만큼 for loop를 돈다.(최소 3개의 값을 가져와야 하기 때문에)</li>
  <li>start, end 값을 정한다.</li>
  <li>i, start, end 값을 이용하여 3개의 값을 배열에서 가져와 더한다.</li>
  <li>더한값이 0인경우 set 자료구조에 저장, 더한 값이 0보다 작은경우 start 값을 1개 더해주고, 아닌경우 end 값을 1개 빼준다.</li>
  <li>Set을 List로 변환해서 반환한다.</li>
</ul>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Solution</span> <span class="p">{</span>
    <span class="k">fun</span> <span class="nf">threeSum</span><span class="p">(</span><span class="n">nums</span><span class="p">:</span> <span class="nc">IntArray</span><span class="p">):</span> <span class="nc">List</span><span class="p">&lt;</span><span class="nc">List</span><span class="p">&lt;</span><span class="nc">Int</span><span class="p">&gt;&gt;</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">nums</span><span class="p">.</span><span class="n">size</span> <span class="p">&lt;=</span> <span class="m">2</span><span class="p">)</span> <span class="k">return</span> <span class="nf">emptyList</span><span class="p">()</span>
        
        <span class="kd">val</span> <span class="py">sortedNum</span> <span class="p">=</span> <span class="n">nums</span><span class="p">.</span><span class="nf">sorted</span><span class="p">()</span>
        <span class="kd">val</span> <span class="py">result</span><span class="p">:</span> <span class="nc">HashSet</span><span class="p">&lt;</span><span class="nc">List</span><span class="p">&lt;</span><span class="nc">Int</span><span class="p">&gt;&gt;</span> <span class="p">=</span> <span class="nf">hashSetOf</span><span class="p">()</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="k">in</span> <span class="m">0</span> <span class="n">until</span> <span class="n">sortedNum</span><span class="p">.</span><span class="n">size</span> <span class="p">-</span><span class="m">2</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">var</span> <span class="py">start</span> <span class="p">=</span> <span class="n">i</span> <span class="p">+</span> <span class="m">1</span>
            <span class="kd">var</span> <span class="py">end</span> <span class="p">=</span> <span class="n">sortedNum</span><span class="p">.</span><span class="n">size</span> <span class="p">-</span> <span class="m">1</span>
            
            <span class="k">while</span> <span class="p">(</span><span class="n">start</span> <span class="p">&lt;</span> <span class="n">end</span><span class="p">)</span> <span class="p">{</span>
                <span class="kd">val</span> <span class="py">sum</span> <span class="p">=</span> <span class="n">sortedNum</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">+</span> <span class="n">sortedNum</span><span class="p">[</span><span class="n">start</span><span class="p">]</span> <span class="p">+</span> <span class="n">sortedNum</span><span class="p">[</span><span class="n">end</span><span class="p">]</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">sum</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
                       <span class="n">result</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="nf">listOf</span><span class="p">(</span><span class="n">sortedNum</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">sortedNum</span><span class="p">[</span><span class="n">start</span><span class="p">],</span> <span class="n">sortedNum</span><span class="p">[</span><span class="n">end</span><span class="p">]))</span>
                       
                    <span class="n">start</span><span class="p">++</span>
                    <span class="n">end--</span>
                <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">sum</span> <span class="p">&lt;</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">start</span><span class="p">++</span>
                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                    <span class="n">end--</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="k">return</span> <span class="n">result</span><span class="p">.</span><span class="nf">toList</span><span class="p">()</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
:ET